"""your message

Revision ID: 4b51523542e3
Revises: 
Create Date: 2025-05-18 18:19:21.413382

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4b51523542e3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_scan_results_id', table_name='scan_results')
    op.drop_table('scan_results')
    op.drop_table('ec2_scan_results')
    op.drop_table('security_group_scan_results')
    op.drop_index('ix_s3_bucket_findings_id', table_name='s3_bucket_findings')
    op.drop_table('s3_bucket_findings')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_table('iam_scan_results')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('iam_scan_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('mfa_enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('admin_privilege', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('scan_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='iam_scan_results_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('s3_bucket_findings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('bucket_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('issue', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='s3_bucket_findings_pkey')
    )
    op.create_index('ix_s3_bucket_findings_id', 's3_bucket_findings', ['id'], unique=False)
    op.create_table('security_group_scan_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('open_to_world', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('unused', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('scan_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='security_group_scan_results_pkey')
    )
    op.create_table('ec2_scan_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('instance_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('public_ip', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('scan_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ec2_scan_results_pkey')
    )
    op.create_table('scan_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('resource_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('issue', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('severity', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('remediation', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='scan_results_pkey')
    )
    op.create_index('ix_scan_results_id', 'scan_results', ['id'], unique=False)
    # ### end Alembic commands ###
